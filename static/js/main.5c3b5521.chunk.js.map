{"version":3,"sources":["images/Photo-Sharing-Portal.png","images/Weather-Ap.png","components/NavBar.jsx","components/Home.jsx","components/Contact.jsx","components/Project.jsx","data/projects.js","components/ProjectDescription.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","state","className","to","key","React","Component","Home","Contact","placeholder","type","id","Project","alt","src","psp","weather","projects","name","desc","skills","img","ProjectDescription","useParams","map","e","index","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,oSC4B5BC,G,wDAxBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,qDAQd,OAEI,yBAAKC,UAAU,oBAEX,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,KAAI,wBAAIC,IAAI,QAAR,SACb,kBAAC,IAAD,CAAMD,GAAG,aAAY,wBAAIC,IAAI,YAAR,aACrB,kBAAC,IAAD,CAAMD,GAAG,YAAW,wBAAIC,IAAI,WAAR,kB,GAhBnBC,IAAMC,Y,OCQZC,G,6KAPP,OACI,6BACI,qF,GAJGF,IAAMC,YC2CVE,G,6KAzCP,OACI,gCACI,yBAAKN,UAAU,qBACX,kCACI,gCAAQ,0CACR,+BACI,+BACA,4BACI,0CAGA,4BACI,2BAAOO,YAAY,oBAAoBC,KAAK,OAAOC,GAAG,WAG9D,4BACI,2CAGA,4BACI,2BAAOF,YAAY,oBAAoBC,KAAK,OAAOC,GAAG,YAG9D,4BACI,wCAGA,4BACI,8BAAUF,YAAY,gBAAgBE,GAAG,gBAKrD,iD,GAnCFN,IAAMC,Y,kCC2BbM,G,6KArBP,OAEQ,yBAAKV,UAAU,kBACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,QAAO,yBAAKU,IAAI,wBAAwBC,IAAKC,QAE1D,yBAAKb,UAAU,aACf,kBAAC,IAAD,CAAMC,GAAG,YAAW,yBAAKU,IAAI,cAAcC,IAAKE,QAEhD,yBAAKd,UAAU,aAAf,WAGA,yBAAKA,UAAU,aAAf,e,GAfEG,IAAMC,YCabW,G,MAfE,CACbF,IAAM,CACMG,KAAO,uBACPC,KAAO,gDACPC,OAAS,CAAC,MAAO,OAAQ,MAAO,KAAK,QACrCC,IAAMN,KAElBC,QAAU,CACEE,KAAO,cACPC,KAAO,6GACPC,OAAS,CAAC,QAAS,OAAQ,MAAO,OAClCC,IAAML,O,MCePM,MAzBf,WAA8B,IAGhBJ,EAASK,cAATL,KACN,OACI,gCAAQ,yBAAKhB,UAAU,iCAEnB,wBAAIA,UAAU,gBAAgBe,EAASC,GAAMA,MAC7C,6BACA,yBAAKhB,UAAU,gBAAgBY,IAAKG,EAASC,GAAMG,MACnD,yBAAKnB,UAAU,eACf,2CACCe,EAASC,GAAMC,MAEhB,wBAAIjB,UAAU,UAAS,sCAClBe,EAASC,GAAME,OAAOI,KAAI,SAACC,EAAEC,GAC1B,OAAO,wBAAIxB,UAAU,aAAaE,IAAKsB,GAAQD,UCYxDE,E,kDAtBb,WAAY3B,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,GAFG,E,qDAOlB,OACE,kBAAC,IAAD,KAAQ,yBAAKC,UAAU,OACnB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,kBAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAWtB,IAClC,kBAAC,IAAD,CAAOqB,KAAK,YAAYC,UAAW,kBAAI,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,SAASC,UAAW,kBAAI,kBAAC,EAAD,gB,GAf5BzB,IAAMC,WCGJyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5c3b5521.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Photo-Sharing-Portal.c77f04a3.png\";","module.exports = __webpack_public_path__ + \"static/media/Weather-Ap.bfed856f.png\";","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport '../css/NavBar.css'\nclass NavBar extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render(){\n        return (\n            \n            <div className=\"navbar-container\">\n                \n                <ul className=\"navbar-list\">\n                    <Link to=\"/\"><li key=\"home\">Home</li></Link>\n                    <Link to=\"/projects\"><li key=\"projects\">Projects</li></Link>\n                    <Link to=\"/contact\"><li key=\"contact\">Contact</li></Link>\n                </ul>\n                \n            </div>\n            \n        )\n    }\n}\n\nexport default NavBar","import React from 'react'\nimport '../css/Home.css'\nclass Home extends React.Component{\n    render(){\n        return (\n            <div>\n                <h1>Hello, I'm Dhruv Tailor , a Full Stack Developer</h1>\n            </div>\n        )\n    }\n}\nexport default Home","import React from 'react'\nimport '../css/contact.css'\nclass Contact extends React.Component{\n    render(){\n        return (\n            <center>\n                <div className=\"contact-container\">\n                    <fieldset>\n                        <legend><b>Contact Me</b></legend>\n                        <table>\n                            <tbody>\n                            <tr>\n                                <td>\n                                    Your Name:\n                                </td>\n                                <td>\n                                    <input placeholder=\"Enter Your Name..\" type=\"text\" id=\"name\"/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    Your Email:\n                                </td>\n                                <td>\n                                    <input placeholder=\"Enter Your E-mail\" type=\"text\" id=\"email\"/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    Message:\n                                </td>\n                                <td>\n                                    <textarea placeholder=\"Enter Message\" id=\"message\"/>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        <button>Submit</button>\n                    </fieldset>\n                </div>\n            </center>\n        )\n    }\n}\n\nexport default Contact","import psp from '../images/Photo-Sharing-Portal.png'\nimport weather from '../images/Weather-Ap.png'\nimport React from 'react'\nimport '../css/Project.css'\nimport {Link} from 'react-router-dom'\nclass Project extends React.Component{\n    \n    render(){\n        return (\n                \n                <div className=\"grid-container\">\n                    <div className=\"grid-item\">\n                        <Link to='/psp'><img alt=\"Photos Sharing Portal\" src={psp}/></Link>\n                    </div>\n                    <div className=\"grid-item\">\n                    <Link to='/weather'><img alt=\"Weather App\" src={weather}/></Link>\n                    </div>\n                    <div className=\"grid-item\">\n                        Iteam 3\n                    </div>\n                    <div className=\"grid-item\">\n                        Item 4\n                    </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Project","import psp from '../images/Photo-Sharing-Portal.png'\nimport weather from '../images/Weather-Ap.png'\n\nconst projects = {\n    psp : {\n                name : 'Photo Sharing Portal',\n                desc : 'A website where users can Share Photos online',\n                skills : ['PHP', 'HTML', 'CSS', 'JS','AJAX'],\n                img : psp\n          },\n    weather : {\n                name : 'Weather App',\n                desc : 'A Simple React based App which shows weather conditions of current location or any other location entered.',\n                skills : ['React', 'HTML', 'CSS', 'JSX'],\n                img : weather\n          }     \n}\n\nexport default projects","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport projects from '../data/projects'\nimport '../css/ProjectDescription.css'\nfunction ProjectDescription(){\n        \n    \n        let { name } = useParams();\n        return (\n            <center><div className=\"project-description-container\">\n                \n                <h2 className=\"project-name\">{projects[name].name}</h2>\n                <hr />\n                <img className=\"project-image\" src={projects[name].img}/>\n                <div className=\"description\">\n                <h3>Description</h3>\n                {projects[name].desc}\n                </div>\n                <ul className=\"skills\"><h3>Skills</h3>\n                    {projects[name].skills.map((e,index)=>{\n                        return <li className=\"skill-item\" key={index}>{e}</li>\n                    })}\n                </ul>\n            </div>\n            </center>\n        )\n    \n}\n\nexport default ProjectDescription","import React from 'react';\nimport NavBar from './components/NavBar'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Contact from './components/Contact'\nimport Project from './components/Project'\nimport './App.css';\nimport ProjectDescription from './components/ProjectDescription';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n     \n    }\n  }\n  render(){\n  return (\n    <Router><div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/contact' component={Contact}/>\n          <Route path='/projects' component={()=><Project />}/>\n          <Route path='/:name' component={()=><ProjectDescription />}/>\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}